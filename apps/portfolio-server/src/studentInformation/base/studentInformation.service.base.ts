/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StudentInformation as PrismaStudentInformation,
} from "@prisma/client";

export class StudentInformationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StudentInformationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.studentInformation.count(args);
  }

  async studentInformations(
    args: Prisma.StudentInformationFindManyArgs
  ): Promise<PrismaStudentInformation[]> {
    return this.prisma.studentInformation.findMany(args);
  }
  async studentInformation(
    args: Prisma.StudentInformationFindUniqueArgs
  ): Promise<PrismaStudentInformation | null> {
    return this.prisma.studentInformation.findUnique(args);
  }
  async createStudentInformation(
    args: Prisma.StudentInformationCreateArgs
  ): Promise<PrismaStudentInformation> {
    return this.prisma.studentInformation.create(args);
  }
  async updateStudentInformation(
    args: Prisma.StudentInformationUpdateArgs
  ): Promise<PrismaStudentInformation> {
    return this.prisma.studentInformation.update(args);
  }
  async deleteStudentInformation(
    args: Prisma.StudentInformationDeleteArgs
  ): Promise<PrismaStudentInformation> {
    return this.prisma.studentInformation.delete(args);
  }
}
